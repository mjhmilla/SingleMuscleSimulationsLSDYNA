function [figH]= addFittedPassiveForceLengthPlotV2(figH,expData,umat41,umat43,...
                    umat43QuadraticBezierCurves,...
                    keyPointsHL1997,keyPointsHL2002,keyPointsVEXATFpe,...
                    subPlotPanel,plotSettings)

umat41Color     = plotSettings.umat41.color;
umat41Label     = plotSettings.umat41.label;
umat41LineWidth = plotSettings.umat41.lineWidth;
umat41LineType  = plotSettings.umat41.lineType;

umat43Color     = plotSettings.umat43.color;
umat43Label     = plotSettings.umat43.label;
umat43LineWidth = plotSettings.umat43.lineWidth;
umat43LineType  = plotSettings.umat43.lineType;

HL1997Color     = plotSettings.HL1997.color;
HL1997Label     = plotSettings.HL1997.label;
HL1997LineWidth = plotSettings.HL1997.lineWidth;
HL1997LineType  = plotSettings.HL1997.lineType;

HL2002Color     = plotSettings.HL2002.color;
HL2002Label     = plotSettings.HL2002.label;
HL2002LineWidth = plotSettings.HL2002.lineWidth;
HL2002LineType  = plotSettings.HL2002.lineType;

%Get the fitting RMSE
x1 = [1;1;1];
umat41FpeError=calcEHTMMPassiveForceLengthError(x1,umat41,...
                        keyPointsHL2002,keyPointsVEXATFpe);
umat41FpeRMSE = sqrt(mean((umat41FpeError).^2));

x1=[umat43.shiftPE;umat43.scalePE];
umat43FpeError=calcVEXATPassiveForceLengthError(x1,umat43,keyPointsHL2002,...
                umat43QuadraticBezierCurves.fiberForceLengthCurve,...
                umat43QuadraticBezierCurves.tendonForceLengthInverseNormCurve);
umat43FpeRMSE = sqrt(mean((umat43FpeError).^2));

%Get EHTMM stiffness at fiso
    lceATOne = calcFpeeInverseUmat41(umat41.fceOptAT,...
                            umat41.lceOptAT,...
                            umat41.dWdes,...
                            umat41.fceOptAT,...
                            umat41.FPEE,...
                            umat41.LPEE0,...
                            umat41.nuPEE);
    lceNATOne = lceATOne/umat41.lceOptAT;
    fceATOne = calcFpeeUmat41(lceATOne,...
                            umat41.lceOptAT,...
                            umat41.dWdes,...
                            umat41.fceOptAT,...
                            umat41.FPEE,...
                            umat41.LPEE0,...
                            umat41.nuPEE);
    fceNATOne= fceATOne/umat41.fceOptAT;
    kceATOne  = calcFpeeDerivativeUmat41(lceATOne,...
                            umat41.lceOptAT,...
                            umat41.dWdes,...
                            umat41.fceOptAT,...
                            umat41.FPEE,...
                            umat41.LPEE0,...
                            umat41.nuPEE);
    kceNATOne = kceATOne/(umat41.fceOptAT/umat41.lceOptAT);

%Generate the curves
npts=100;
lceN0 = umat43QuadraticBezierCurves.fiberForceLengthCurve.xEnd(1,1);
lceN1 = umat43QuadraticBezierCurves.fiberForceLengthCurve.xEnd(1,2);

umat41Curves.fpe.lceNAT = [lceN0:((lceN1-lceN0)/(npts-1)):lceN1]';
umat41Curves.fpe.fceNAT = zeros(size(umat41Curves.fpe.lceNAT));

umat43Curves.fpe.lceNAT = umat41Curves.fpe.lceNAT;
umat43Curves.fpe.fceNAT = zeros(size(umat41Curves.fpe.lceNAT));

for i=1:1:npts
    lceNAT = umat41Curves.fpe.lceNAT(i,1);
    fpeAT= calcFpeeUmat41(lceNAT*umat41.lceOptAT,...
                            umat41.lceOptAT,...
                            umat41.dWdes,...
                            umat41.fceOptAT,...
                            umat41.FPEE,...
                            umat41.LPEE0,...
                            umat41.nuPEE);
    umat41Curves.fpe.fceNAT(i,1)=fpeAT/umat41.fceOptAT;

    fibKin = calcFixedWidthPennatedFiberKinematics(lceNAT*umat43.lceOpt,...
                                        0,...
                                        umat43.lceOpt,...
                                        umat43.penOpt);
    lce     = fibKin.fiberLength;
    alpha   = fibKin.pennationAngle;
    lceN    = lce/umat43.lceOpt; 

    fpeN = umat43.scalePE*calcQuadraticBezierYFcnXDerivative(...
                     lceN-umat43.shiftPE,...
                     umat43QuadraticBezierCurves.fiberForceLengthCurve,0);

    umat43Curves.fpe.fceNAT(i,1) = fpeN*cos(alpha);
end

figure(figH);
    if(length(subPlotPanel)==3)
        subplot(subPlotPanel(1,1),subPlotPanel(1,2),subPlotPanel(1,3));
    end
    if(length(subPlotPanel)==4)
        subplot('Position',subPlotPanel);
    end

    plot(umat41Curves.fpe.lceNAT,...
         umat41Curves.fpe.fceNAT,...
         plotSettings.umat41.lineType,...
        'Color',umat41Color,...
        'DisplayName',[umat41Label,' $$\mathbf{f}^\mathrm{PE}$$'],...
        'LineWidth',umat41LineWidth);
    hold on;

    plot(umat43Curves.fpe.lceNAT,...
        umat43Curves.fpe.fceNAT,...
        plotSettings.umat43.lineType,...
        'Color',umat43Color,...
        'DisplayName',[umat43Label,' $$\mathbf{f}^\mathrm{PE}$$'],...
        'LineWidth',umat43LineWidth*0.5);
    hold on;

    if(contains(expData,'HL1997')==1)
        plot(keyPointsHL1997.fpe.lceNAT,...
             keyPointsHL1997.fpe.fceNAT,...
             HL1997LineType,...
             'LineWidth',0.5,...
             'MarkerSize',3,...
             'Color',[1,1,1],...
             'MarkerFaceColor',HL1997Color,...
             'DisplayName',HL1997Label);
        hold on;
    end

    hold on;
    plot(keyPointsHL2002.fpe.lceNAT,...
         keyPointsHL2002.fpe.fceNAT,...
         HL2002LineType,...
         'LineWidth',0.5,'Color',[0,0,0],...
         'MarkerSize',3,...
         'MarkerFaceColor',HL2002Color,...
         'DisplayName',HL2002Label);
    hold on;
    plot(keyPointsVEXATFpe.lceNAT,...
         keyPointsVEXATFpe.fceNAT,...
         'x',...
         'LineWidth',0.5,'Color',[0,0,0],...
         'MarkerSize',3,...
         'MarkerFaceColor',[0,0,0],...
         'HandleVisibility','off');
    hold on;

    text(keyPointsVEXATFpe.lceNAT-0.02,...
         keyPointsVEXATFpe.fceNAT+0.03,...
         sprintf('%s%1.2f%s',...
         '$$k^{PE}_o=$$',...
         keyPointsVEXATFpe.kceNAT,...
         '$$f^M_o/\ell^M_o$$'),...
         'HorizontalAlignment','right',...
         'VerticalAlignment','top',...
         'Color',umat43Color,...
         'FontSize',6);
    hold on;

    text(keyPointsVEXATFpe.lceNAT-0.02,...
         keyPointsVEXATFpe.fceNAT+0.1,...
         sprintf('%s%1.2f%s',...
         '$$k^{PE}_o=$$',...
         kceNATOne,...
         '$$f^M_o/\ell^M_o$$'),...
         'HorizontalAlignment','right',...
         'VerticalAlignment','top',...
         'Color',umat41Color,...
         'FontSize',6);
    hold on;

   
    
    text(1.35,0.12,...
        sprintf('%s %1.4f',...
            'RMSE',umat41FpeRMSE),...
            'HorizontalAlignment','right',...
            'VerticalAlignment','top',...
            'Color',umat41Color,...
            'FontSize',6);
    hold on;

    text(1.35,0.07,...
        sprintf('%s %1.4f',...
            'RMSE',umat43FpeRMSE),...
            'HorizontalAlignment','right',...
            'VerticalAlignment','top',...
            'Color',umat43Color,...
            'FontSize',6);
    hold on;    

    box off;
    
    xlim([min(umat43Curves.fpe.lceNAT),max(umat43Curves.fpe.lceNAT)]);
    ylim([0,1.1]);

    xlabel('Norm. Length ($$\ell/\ell^M_o$$)');
    ylabel('Norm. Force ($$f/f^M_o$$)');    
    title('B. Passive force length fitting $$\mathbf{f}^\mathrm{PE}$$');

    [lgdH, lgdIcons, lgdPlots, lgdTxt]=...
        legend('Location','west','FontSize',6);

    %[lgdH, lgdIcons, lgdPlots, lgdTxt,xDataOrig,xDataUpd] = ...
    %scaleLegendLines(0.5,lgdH, lgdIcons, lgdPlots, lgdTxt);

    legend boxoff;


