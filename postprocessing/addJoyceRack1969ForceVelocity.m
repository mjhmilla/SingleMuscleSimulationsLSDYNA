%%
% SPDX-FileCopyrightText: 2024 Matthew Millard <millard.matthew@gmail.com>
%
% SPDX-License-Identifier: MIT
%
%%
function figH = addJoyceRack1969ForceVelocity(figH, ...
                    subplotPosition, labelData,  expColor,...
                    addLegendEntry,...
                    fileNameToAppendProcessedData,...
                    idData,...
                    idxTrialToPlot)

figure(figH);
subplot('Position',subplotPosition);

fileJR1969fvN = ['..',filesep,'..',filesep,'..',filesep,'..',filesep,...
           'ReferenceExperiments',filesep,...
           'force_velocity',filesep,...
           'JoyceRack1969Fig5.csv']; 

dataJR1969fvN = loadDigitizedData(fileJR1969fvN,...
                'Force ($$kg^M$$)',...
                'Velocity ($$mm$$)',...
                {'c35','c15','c07','c04'},...
                {'Joyce and Rack 1969'}); 
hVis='off';
if(addLegendEntry==1)
    hVis = 'on';
end
if(isempty(fileNameToAppendProcessedData)==0)
    fid=fopen(fileNameToAppendProcessedData,'a');
end

%Extract fiso and vmax

%Fiso: easy
fisoJR69=dataJR1969fvN(1).y(5);
assert(abs(dataJR1969fvN(1).x(5))<1,...
    'Error: the velocity of fiso should be less than 1mm/s');

%vmax: a bit more work. Here I take the data from the maximum activation
%      trial and then fit Hill's force-velocity curve to it to extract
%      vmax

fisoSubMaxJR69 = dataJR1969fvN(4).y(4); 
idx = find(dataJR1969fvN(4).x <= 0);
x0 = [0.2409,-75];
s0 = abs(x0);
xN0 = x0 ./ s0;
dataFit = [dataJR1969fvN(4).x(idx),dataJR1969fvN(4).y(idx)];
errFcn = @(arg)calcHillError(arg,s0,dataFit,fisoSubMaxJR69);
[xN1,err1]=lsqnonlin(errFcn,xN0);
x = xN1.*s0;
vceSubMax = abs(x(1,2));
here=1;


idx = find(dataJR1969fvN(1).x <= 0);
x0 = [0.0922,-230];
s0 = abs(x0);
xN0 = x0 ./ s0;
dataFit = [dataJR1969fvN(1).x(idx),dataJR1969fvN(1).y(idx)];
errFcn = @(arg)calcHillError(arg,s0,dataFit,fisoJR69);
[xN1,err1]=lsqnonlin(errFcn,xN0);
x = xN1.*s0;
vceMax = abs(x(1,2));

vceNSubMax = vceSubMax / vceMax;


%Plot the weakest sub-max f-v relation

plot( dataJR1969fvN(idxTrialToPlot).x ./ vceMax, ...
      dataJR1969fvN(idxTrialToPlot).y ./ fisoJR69,...
      '-',...
      'Color',[1,1,1],...
      'LineWidth',1,...
      'HandleVisibility','off');
hold on;

plot( dataJR1969fvN(idxTrialToPlot).x ./ vceMax, ...
      dataJR1969fvN(idxTrialToPlot).y ./ fisoJR69,...
      '.',...
      'Color',[1,1,1],...
      'LineWidth',1,...
      'MarkerSize',5,...
      'MarkerFaceColor',[1,1,1],...
      'HandleVisibility','off');
hold on;

plot( dataJR1969fvN(idxTrialToPlot).x ./ vceMax, ...
      dataJR1969fvN(idxTrialToPlot).y ./ fisoJR69,...
      '-',...
      'Color',expColor,...
      'LineWidth',0.5,...
      'DisplayName',labelData,...
      'HandleVisibility',hVis);
hold on;

plot( dataJR1969fvN(idxTrialToPlot).x ./ vceMax, ...
      dataJR1969fvN(idxTrialToPlot).y ./ fisoJR69,...
      '.',...
      'Color',expColor,...
      'LineWidth',0.5,...
      'MarkerSize',4,...
      'MarkerFaceColor',expColor,...
      'HandleVisibility','off');
hold on;

if(idxTrialToPlot==4)

    xPt=max(dataJR1969fvN(idxTrialToPlot).x)./vceMax;
    yPt=fisoSubMaxJR69./fisoJR69;
    dx=0.05*2;
    dy=0.01*1.7;

    th=text(xPt,yPt+2*dy,...
         sprintf('%1.2f%s',fisoSubMaxJR69/fisoJR69,'$$f^M_o$$'),...
         'HorizontalAlignment','left',...
         'VerticalAlignment', 'bottom',...
         'FontSize',6);
    hold on;
end

if(isempty(fileNameToAppendProcessedData)==0)
    idxShortening = find(dataJR1969fvN(idxTrialToPlot).x < 0);
    for indexData=1:1:length(idxShortening)
        i = idxShortening(indexData);
        fprintf(fid,'%1.3f,%1.3f,%i,%i\n',...
                 dataJR1969fvN(idxTrialToPlot).x(i,1)./vceMax,...
                 dataJR1969fvN(idxTrialToPlot).y(i,1)./fisoJR69,...
                 idData,4);
    end  
end

if(isempty(fileNameToAppendProcessedData)==0)
    fclose(fid);
end



